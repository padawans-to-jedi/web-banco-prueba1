swagger: '2.0'
info:
  version: "2.0.0"
  title: 'cnp-partners-blockchain'
  description: 'Api Rest that exposes the services of the Alastria network to be consumed internally.'
paths:
  '/accounts/verifiers':
    post:
      summary: Verify the data of a user by CNP
      description: Verify the data of a user by CNP
      parameters:
        - name: AuthorizationKey
          description: Hash of the authorization key.
          in: header  
          type: string
          pattern: "[A-Fa-f0-9]{64}"
          maxLength: 64
          minLength: 64
          required: true
        - name: VerifierRequest
          required: true
          in: body
          schema:
            $ref: '#/definitions/VerifierRequest'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/VerifierResponse'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/MessageResponse' 
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/MessageResponse' 
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/MessageResponse'
        404:
          description: document not Found or has been modified. 
          schema:
            $ref: '#/definitions/MessageResponse'
        429:
          description: Too Many Requests
          schema:
            $ref: '#/definitions/MessageResponse' 
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/MessageResponse'
    
  
  '/accounts':
    post:
      summary: create User account.
      description: Create new user Account.
      parameters: 
       - name: AuthorizationKey
         description: Hash of the authorization key.
         in: header  
         type: string
         pattern: "[A-Fa-f0-9]{64}"
         maxLength: 64
         minLength: 64
         required: true
       - name: User
         in: body
         schema:
           $ref: '#/definitions/Account'
         required: true   
      responses:
        201:
          description: CREATED
          schema:
            $ref: '#/definitions/AccountResponse'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/MessageResponse' 
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/MessageResponse' 
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/MessageResponse'
        404:
          description: document not Found or has been modified. 
          schema:
            $ref: '#/definitions/MessageResponse'
        429:
          description: Too Many Requests
          schema:
            $ref: '#/definitions/MessageResponse' 
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/MessageResponse'
  
  '/accounts/{accountID}/documents':
    post:
      summary: Add a document to the user account.
      description: Add a document to the user account.
      parameters:
        - name: AuthorizationKey
          description: Hash of the authorization key.
          in: header  
          type: string
          pattern: "[A-Fa-f0-9]{64}"
          maxLength: 64
          minLength: 64
          required: true
        - name: accountID
          in: path
          required: true
          type: integer
          minimum: 1
          maximum: 100000000
        - name: DocumentRequest
          in: body
          required: true
          schema:
            $ref: '#/definitions/DocumentRequest'
      responses:
        201:
          description: CREATED
          schema:
            $ref: '#/definitions/DocumentTransactionResponse'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/MessageResponse' 
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/MessageResponse' 
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/MessageResponse'
        404:
          description: document not Found or has been modified. 
          schema:
            $ref: '#/definitions/MessageResponse'
        429:
          description: Too Many Requests
          schema:
            $ref: '#/definitions/MessageResponse' 
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/MessageResponse'
    
    get:
      summary: Retrieve information from the document through the hash.
      description: Retrieve information from the document through the hash.
      parameters:
        - name: AuthorizationKey
          description: Hash of the authorization key.
          in: header  
          type: string
          pattern: "[A-Fa-f0-9]{64}"
          maxLength: 64
          minLength: 64
          required: true
        - name: accountID
          in: path
          required: true
          type: integer
          minimum: 1
          maximum: 100000000
        - name: documentHash
          in: query
          required: true
          type: string
          pattern: "[A-Fa-f0-9]{64}"
          maxLength: 64
          minLength: 64  
      responses:
        200:
          description: Recovered data.
          schema:
            $ref: '#/definitions/DocumentDataResponse'
        400:
          description: Bad Request.
          schema:
            $ref: '#/definitions/MessageResponse' 
        401:
          description: Unauthorized.
          schema:
            $ref: '#/definitions/MessageResponse' 
        403:
          description: Forbidden.
          schema:
            $ref: '#/definitions/MessageResponse'
        404:
          description: document not Found or has been modified. 
          schema:
            $ref: '#/definitions/MessageResponse'
        429:
          description: Too Many Requests.
          schema:
            $ref: '#/definitions/MessageResponse' 
        500:
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/MessageResponse'
            
    
  '/accounts/{accountID}/documents/{documentID}':  
    patch:
      summary: Modify the hash of the document.
      description: Modify the hash of the document.
      parameters:
        - name: AuthorizationKey
          description: Hash of the authorization key.
          in: header  
          type: string
          pattern: "[A-Fa-f0-9]{64}"
          maxLength: 64
          minLength: 64
          required: true
        - name: accountID
          in: path
          required: true
          type: integer
          minimum: 1
          maximum: 100000000
        - name: documentID
          in: path
          required: true
          type: integer
          minimum: 1
          maximum: 1000000000 
        - name: documentHash
          in: query
          required: true
          type: string
          pattern: "[A-Fa-f0-9]{64}"
          maxLength: 64
          minLength: 64
          
      responses:
        200:
          description: UPDATED
          schema:
            $ref: '#/definitions/DocumentTransactionResponse' 
        400:
          description: Bad Request.
          schema:
            $ref: '#/definitions/MessageResponse' 
        401:
          description: Unauthorized.
          schema:
            $ref: '#/definitions/MessageResponse' 
        403:
          description: Forbidden.
          schema:
            $ref: '#/definitions/MessageResponse'
        404:
          description: document not Found or has been modified. 
          schema:
            $ref: '#/definitions/MessageResponse'
        429:
          description: Too Many Requests.
          schema:
            $ref: '#/definitions/MessageResponse' 
        500:
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/MessageResponse'
            
    delete:
      summary: Delete the hash of the document
      description: Delete the hash of the document.
      parameters:
        - name: AuthorizationKey
          description: Hash of the authorization key.
          in: header  
          type: string
          pattern: "[A-Fa-f0-9]{64}"
          maxLength: 64
          minLength: 64
          required: true
        - name: accountID
          in: path
          required: true
          type: integer
          minimum: 1
          maximum: 100000000
        - name: documentID
          in: path
          required: true
          type: integer
          minimum: 1
          maximum: 1000000000
        - name: documentHash
          in: query
          required: true
          type: string
          pattern: "[A-Fa-f0-9]{64}"
          maxLength: 64
          minLength: 64  
      responses:
        200:
          description: DELETED
          schema:
            $ref: '#/definitions/MessageResponse' 
        400:
          description: Bad Request.
          schema:
            $ref: '#/definitions/MessageResponse' 
        401:
          description: Unauthorized.
          schema:
            $ref: '#/definitions/MessageResponse' 
        403:
          description: Forbidden.
          schema:
            $ref: '#/definitions/MessageResponse'
        404:
          description: document not Found or has been modified. 
          schema:
            $ref: '#/definitions/MessageResponse'
        429:
          description: Too Many Requests.
          schema:
            $ref: '#/definitions/MessageResponse' 
        500:
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/MessageResponse'
    get:
      summary: Recover the information of the document through its identifier.
      description: Recover the information of the document through its identifier.
      parameters:
        - name: AuthorizationKey
          description: Hash of the authorization key.
          in: header  
          type: string
          pattern: "[A-Fa-f0-9]{64}"
          maxLength: 64
          minLength: 64
          required: true
        - name: accountID
          in: path
          required: true
          type: integer
          minimum: 1
          maximum: 100000000
        - name: documentID
          in: path
          required: true
          type: integer
          minimum: 1
          maximum: 1000000000 
      responses:
        200:
          description: Recovered data.
          schema:
            $ref: '#/definitions/DocumentDataResponse'
        400:
          description: Bad Request.
          schema:
            $ref: '#/definitions/MessageResponse' 
        401:
          description: Unauthorized.
          schema:
            $ref: '#/definitions/MessageResponse' 
        403:
          description: Forbidden.
          schema:
            $ref: '#/definitions/MessageResponse'
        404:
          description: document not Found or has been modified. 
          schema:
            $ref: '#/definitions/MessageResponse'
        429:
          description: Too Many Requests.
          schema:
            $ref: '#/definitions/MessageResponse' 
        500:
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/MessageResponse'
          
  '/accounts/{accountID}/info':
    get:
      summary: Recover all the information registered in the account.
      description: Recover all the information registered in the account.
      parameters:
        - name: AuthorizationKey
          description: Hash of the authorization key.
          in: header  
          type: string
          pattern: "[A-Fa-f0-9]{64}"
          maxLength: 64
          minLength: 64
          required: true
        - name: accountID
          in: path
          required: true
          type: integer
          minimum: 1
          maximum: 100000000
      responses:
        200:
          description: Recovered data.
          schema:
            $ref: '#/definitions/AccountDataResponse'
        400:
          description: Bad Request.
          schema:
            $ref: '#/definitions/MessageResponse' 
        401:
          description: Unauthorized.
          schema:
            $ref: '#/definitions/MessageResponse' 
        403:
          description: Forbidden.
          schema:
            $ref: '#/definitions/MessageResponse'
        404:
          description: document not Found or has been modified. 
          schema:
            $ref: '#/definitions/MessageResponse'
        429:
          description: Too Many Requests.
          schema:
            $ref: '#/definitions/MessageResponse' 
        500:
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/MessageResponse'    
    
    
          
definitions:
  
  DocumentResponse:
    type: object
    description: Response of the document upload with the information coming from the blockchain.
    properties:
      documentHash:
        type: string          
        pattern: "[A-Fa-f0-9]{64}"
        maxLength: 64
        minLength: 64
      transactionHash:
        type: string          
        pattern: "[A-Fa-f0-9]"
      transactionBlock:
        description: Block where the smart-contract deployment transaction was performed.
        type: integer
        format: int64
      encriptingAlgoritm:
        description: Algorithm used for the generation of the document Hash.
        type: string
      contractAddress:
        description: Address where the user's contract is displayed.
        type: string          
        pattern: "[A-Fa-f0-9]"  
        
        
        
  
  VerifierRequest:
    type: object
    description: External entity request for CNP to validate the user's data.
    properties:
      identityContractAddress:
        type: string
      user:
        $ref: '#/definitions/UserData'
  
  VerifierResponse:
    type: object
    description: Response with the data validated by CNP in case they are.
    properties:
      idCardValidator:
        $ref: '#/definitions/VerifierDataValidator'
      cardTypeValidator:
        $ref: '#/definitions/VerifierDataValidator'
      nameValidator:
        $ref: '#/definitions/VerifierDataValidator'
      surnameValidator:
        $ref: '#/definitions/VerifierDataValidator'
      birthDateValidator:
        $ref: '#/definitions/VerifierDataValidator'
        
  VerifierDataValidator:
    type: object
    description: It shows if the data is validated and if it is valid, it coincides with what was sent.
    properties:
      isSigned:
        type: boolean
      isValid:
        type: boolean
        
  UserData:
    type: object
    properties:
      idCard:
        type: string
        minimum: 5
        maximum: 15
      cardType:
        type: string
        minimum: 3
        maximum: 10 
      name:
        type: string
        minimum: 1
        maximum: 50
      surname:
        type: string
        minimum: 1
        maximum: 50
      birthDate:
        description: Birth date Timestamp (POSIX time o Unix epoch time).
        type: integer
        format: int64
        maximum:  2000000000
        minimum: -2000000000
  
  Account:
    type: object
    properties:
      accountID:
        type: integer
        minimum: 1
        maximum: 100000000
      mailHash:
        description: User´s email hashed
        type: string          
        pattern: "[A-Fa-f0-9]{64}"
        maxLength: 64
        minLength: 64
      idCard:
        type: string
        minimum: 5
        maximum: 15
      cardType:
        type: string
        minimum: 3
        maximum: 10 
      name:
        type: string
        minimum: 1
        maximum: 50
      surname:
        type: string
        minimum: 1
        maximum: 50
      birthDate:
        description: Birth date Timestamp (POSIX time o Unix epoch time).
        type: integer
        format: int64
        maximum:  2000000000
        minimum: -2000000000 
      
  AccountResponse:
    type: object
    description: Information needed to send the confirmation email.
    properties:
      blockchainAccount:
        description: Blockchain Account identifier.
        type: string          
        pattern: "[A-Fa-f0-9]"
      blockchainPass:
        description: Blockchain Account password.
        type: string          
        pattern: "[A-Fa-f0-9]{64}"
        maxLength: 64
        minLength: 64
      contractAddress:
        description: Address where the user's contract is displayed.
        type: string          
        pattern: "[A-Fa-f0-9]"
      transactionBlock:
        description: Block where the smart-contract deployment transaction was performed.
        type: integer
        format: int64
      transactionHash: 
        description: Smart-contract deployment transaction identifier.
        type: string
        pattern: "[A-Fa-f0-9]"
    
  AccountDataResponse:
    type: object
    description: All the information registered in the account.
    properties:
      documents:
        type: array
        items:
          $ref: '#/definitions/DocumentDataResponse'
        maxItems: 200
        
  
  DocumentRequest:
    type: object
    description: Format to register the hash of the document.
    properties:
      documentID:
        description: Document identifier.
        type: integer
        minimum: 1
        maximum: 1000000000
      documentHash:
        description: Document hashed
        type: string          
        pattern: "[A-Fa-f0-9]{64}"
        maxLength: 64
        minLength: 64
  
  DocumentDataResponse:
    type: object
    description: Recovered data.
    properties:
      documentID:
        description: Document identifier.
        type: integer
        minimum: 1
        maximum: 1000000000
      documentHash:
        description: Document hashed
        type: string          
        pattern: "[A-Fa-f0-9]{64}"
        maxLength: 64
        minLength: 64
      timestamp:
        description: Timestamp of the document record
        type: integer
        format: int64
        maximum: 2000000000
        minimum: 1000000000
        
  DocumentTransactionResponse:
    type: object
    description: Recovered data.
    properties:
      documentID:
        description: Document identifier.
        type: integer
        minimum: 1
        maximum: 1000000000
      documentHash:
        description: Document hashed
        type: string          
        pattern: "[A-Fa-f0-9]{64}"
        maxLength: 64
        minLength: 64
      timestamp:
        description: Timestamp of the document record
        type: integer
        format: int64
        maximum: 2000000000
        minimum: 1000000000
      accountAddress:
        description:  Personal acoount address for the user.
        type: string          
        pattern: "[A-Fa-f0-9]"
      transactionBlock:
        description: Block where the smart-contract deployment transaction was performed.
        type: integer
        format: int64
      transactionHash: 
        description: Smart-contract deployment transaction identifier.
        type: string
        pattern: "[A-Fa-f0-9]"  
      
        
  MessageResponse:
    type: object
    description: Type of error registered.
    properties:
      mensaje:
        type: string
        maxLength: 250
        pattern: "[^A-Za-z0-9]"
      tipo:
        type: string
        maxLength: 50
        pattern: "[^A-Za-z0-9]"
  

    
        
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /atsistemas-sa/cnp-partners-blockchain/1.0.0
schemes:
 - https