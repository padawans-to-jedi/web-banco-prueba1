swagger: '2.0'
info:
  version: '1.0'
  title: 'LiberBank-ApiGateway'
  description: 'LiberBank-ApiGateway definition'
security:
  - OAuth2: [] 
securityDefinitions:
      OAuth2:
        type: oauth2
        flow: accessCode
        authorizationUrl: https://example.com/oauth/authorize
        tokenUrl: https://example.com/oauth/token
        scopes:
          private: Total access 
paths:
  /accounts:
    get:
      tags:
      - accounts
      summary: Operation to obtain the accounts of a PSU
      description: |
        In this Sandbox version, you can use the following values to force your desired response back:

        |        Case        |         X-Request-Id & queryParams      |
        | ------------------ | --------------------------------------- |
        | Status code 400    | 550e8400-e29b-41d4-a716-446655440400    |
        | Status code 404    | 550e8400-e29b-41d4-a716-446655440404    |
        | Status code 500    | 550e8400-e29b-41d4-a716-446655440500    |
        | Valid pagination   | ?count=(.*)&cursor=3yvu1pzhd3i7         |
        | Valid pagination   | ?cursor=3yvu1pzhd3i7                    |

        > Where (.*) is any value.
      produces:
      - application/json
      parameters:
      - name: X-Request-Id
        in: header
        type: string
        format: uuid
        required: true
        description: Id of the request, unique to the call, determined by the initiating
          part
      responses:
        200:
          description: 200 OK
          headers:
            X-Request-Id:
              type: string
              format: uuid
          schema:
            $ref: '#/definitions/AccountsResponse'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 403 Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 404 Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        405:
          description: 405 Method Not Allowed
          schema:
            $ref: '#/definitions/ErrorResponse'
        420:
          description: 420 Method Failure
          schema:
            $ref: '#/definitions/ErrorResponse'
        499:
          description: 499 Codigo Transformaciones Inexistente
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 500 Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'      
        
  /accounts/{account-Id}/balances:
    get:
      tags:
      - balances
      summary: Operation to obtain the balances of an account
      description: |
        In this Sandbox version, you can use the following values to force your desired response back:

        |        Case       | account id |
        | ----------------- | ---------- |
        | Status code 200   | LBK123     |
        | Status code 400   | LBK1230    |
        | Status code 404   | LBK1234    |
        | Status code 500   | LBK1235    |
      produces:
      - application/json
      parameters:
      - name: account-Id
        in: path
        type: string
        required: true
        description: Id Account
      - name: X-Request-Id
        in: header
        type: string
        required: true
        format: uuid
        description: ID of the request, unique to the call, determined by the initiating
          party
      responses:
        200:
          description: 200 OK
          headers:
            X-Request-Id:
              type: string
              format: uuid
          schema:
            $ref: '#/definitions/BalancesResponse'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 403 Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 404 Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        405:
          description: 405 Method Not Allowed
          schema:
            $ref: '#/definitions/ErrorResponse'
        499:
          description: 499 Codigo Transformaciones Inexistente
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 500 Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        
  /accounts/{account-Id}/transactions:
    get:
      tags:
      - transactions
      summary: Operation to obtain the transactions of an account
      description: |
        In this Sandbox version, you can use the following values to force your desired response back:

        |        Case       |     account id & queryParams     |
        | ----------------- | -------------------------------- |
        | Status code 200   | LBK123                           |
        | Status code 400   | LBK1230                          |
        | Status code 404   | LBK1234                          |
        | Status code 500   | LBK1235                          |
        | Valid pagination  | ?count=(.*)&cursor=3yvu1pzhd3i7  |
        | Valid pagination  | ?cursor=3yvu1pzhd3i7             |

        > Where (.*) is any value.
      produces:
      - application/json
      parameters:
      - name: account-Id
        in: path
        type: string
        required: true
        description: Account Id
      - name: dateFrom
        in: query
        type: string
        format: date
        description: Start date to filter transactions
      - name: dateTo
        in: query
        type: string
        format: date
        description: End date to filter transactions
      - name: X-Request-Id
        in: header
        type: string
        format: uuid
        required: true
        description: ID of the request, unique to the call, determined by the initiating
          part
      - name: count
        in: query
        type: string
        required: false
        description: Specifies the page size
      - name: cursor
        in: query
        type: string
        required: false
        description: Specifies the next page
      responses:
        200:
          description: 200 OK
          headers:
            X-Request-ID:
              type: string
              format: uuid
              description: Id of the request, unique to the call, determined by the
                initiating part
            Content-Type:
              type: string
              description: application/json
          schema:
            $ref: '#/definitions/TransactionResponse'
        400:
          description: 400 Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: 401 Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 403 Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 404 Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        405:
          description: 405 Method Not Allowed
          schema:
            $ref: '#/definitions/ErrorResponse'
        499:
          description: 499 Codigo Transformaciones Inexistente
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 500 Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
 

definitions:

  AccountsResponse:
    description: List of accounts
    type: object
    required:
    - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/accountDto'
      next_cursor:
        type: string
    additionalProperties: false
  
  
  BalancesResponse:
    description: Balance associated with an account
    type: object
    required:
    - balances
    properties:
      account:
        $ref: '#/definitions/accountReferenceDto'
      balances:
        $ref: '#/definitions/balancesDto'
        
  TransactionResponse:
    description: Transaction associated with an account
    type: object
    properties:
      account:
        $ref: '#/definitions/accountReferenceDto'
        description: Account identifier
      transactions:
        description: Transactions processed
        type: object
        required:
        - data
        properties:
          data:
            type: array
            items:
              $ref: '#/definitions/transactionDto'
          next_cursor:
            type: string
            
  ErrorResponse:
    type: object
    description: Tipo de error ocurrido.
    properties:
      mensaje:
        type: string
        maxLength: 250
        pattern: "[^A-Za-z0-9]"
      tipo:
        type: string
        maxLength: 250
        pattern: "[^A-Za-z0-9]"
  
  accountDto:
    description: Details of an account
    type: object
    required:
    - resourceId
    - iban
    - currency
    properties:
      resourceId:
        type: string
        maxLength: 35
        description: Id account
        example: gdjg9wq1rcr8wer9mcr
      iban:
        type: string
        pattern: ^[A-Z]{2}[0-9]{22}$
        description: Used for accounts that do not have IBAN
        example: ES1720480000003400138578
      currency:
        type: string
        pattern: ^[A-Z]{3}$
        description: ISO 4217 Alpha 3
        example: EUR
      product:
        type: string
        maxLength: 20
        description: Product name of the bank for this account
        example: ACTIVA
        
  accountReferenceDto:
    description: Reference to an account
    type: object
    required:
    - iban
    properties:
      iban:
        type: string
        pattern: ^[A-Z]{2}[0-9]{2}[0-9]{20}$
        description: International Bank Account Number
        example: ES1720480000003400138578
      currency:
        type: string
        pattern: ^[A-Z]{3}$
        description: Badge in ISO 4217 Alpha 3
        example: EUR
        
  balanceDto:
    description: Information about a balance
    type: object
    required:
    - amount
    properties:
      amount:
        $ref: '#/definitions/amountDto'
        description: Amount of the balance
      lastChangeDateTime:
        type: string
        format: date
        description: Date and time of last change
        example: "2018-07-24"
        
  balancesDto:
    description: Description of balances shown
    type: object
    required:
    - forwardAvailable
    properties:
      closingBooked:
        $ref: '#/definitions/balanceDto'
      forwardAvailable:
        $ref: '#/definitions/balanceDto'
      retainedBalance:
        $ref: '#/definitions/balanceDto'
      openingBooked:
        $ref: '#/definitions/balanceDto'
        
  amountDto:
    description: Amount of an account
    type: object
    required:
    - currency
    - amount
    properties:
      currency:
        type: string
        pattern: ^[A-Z]{3}$
        description: ISO 4217 Alpha 3
        example: EUR
      amount:
        type: number
        format: decimal
        description: Quantity with fractional digits. Negative quantities begin with
          the minus sign '-'. The decimal point separator is a point'.'
          
  transactionDto:
    description: Information of a transaction
    type: object
    required:
    - transactionId
    - amount
    properties:
      transactionId:
        type: string
        maxLength: 9
        description: Transaction Id
        example: nfdd829qwafzx38tj9304
      entryReference:
        type: string
        maxLength: 14
        description: Transaction reference
        example: asdafw23
      bookingDate:
        type: string
        format: date
        description: Date on which an entry is registered in the bank
        example: "2017-09-21"
      amount:
        $ref: '#/definitions/amountDto'
      balances:
        $ref: '#/definitions/balancesDto'
        
  access_token_response:
    type: object
    additionalProperties: false
    required:
    - token_type
    - access_token
    - expires_in
    properties:
      token_type:
        enum:
        - bearer
      access_token:
        type: string
      expires_in:
        type: integer
      scope:
        type: string
      refresh_token:
        type: string
  
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /pedrodlf/LiberBank-ApiGateway/1.0
schemes:
 - https