swagger: '2.0'
info:
  version: '1.0'
  title: 'LiberBank-ApiGateway'
  description: 'LiberBank-ApiGateway definition'
security:
  - OAuth2: [] 
securityDefinitions:
      OAuth2:
        type: oauth2
        flow: accessCode
        authorizationUrl: https://example.com/oauth/authorize
        tokenUrl: https://example.com/oauth/token
        scopes:
          private: Total access 
paths:
  /login:
    post:
      tags: 
        - Publico
      summary: Login de usuario.
      description: Obtener la autorizacion para el usuario.
      produces: 
        - application/json
      consumes: 
        - application/json
      parameters:
        - name: LoginRequest
          in: body
          required: true
          schema:
            $ref: '#/definitions/LoginRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/LoginResponse'
        default:
          description: error inesperado
          schema: 
            $ref: '#/definitions/ErrorResponse'
  /registry:
    post:
      tags: 
        - Publico
      summary: Registrar un nuevo usuario.
      description: Registrar un nuevo usuario.
      produces: 
        - application/json
      consumes: 
        - application/json
      parameters: 
        - name: Userdata
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserData'
      responses:
        201:
          description: CREATED
          schema:
            $ref: '#/definitions/MessageResponse'
        default:
          description: error inesperado
          schema: 
            $ref: '#/definitions/ErrorResponse'
    
  /users/{userID}/payments:
    post:
      tags: 
        - Privado
      security:
        - OAuth2: [private]    
      summary: Agregar un producto al usuario.
      description: Agregar un producto al usuario.
      produces: 
        - application/json
      consumes: 
        - application/json
      parameters: 
        - name: userID
          in: path
          required: true
          type: integer
          minimum: 1
          format: int64
        - name: PaymentRequest
          in: body
          required: true
          schema:
            $ref: '#/definitions/PaymentsRequest'
      responses:
        200:
          description: OK    
        default:
          description: error inesperado
          schema: 
            $ref: '#/definitions/ErrorResponse'
  
  /users/{userID}:
    put:
      security:
        - OAuth2: [private]
      tags: 
        - Privado
      summary: Modificar datos de Usuario.
      description: Modificar datos de Usuario.
      produces: 
        - application/json
      consumes: 
        - application/json
      parameters:
        - name: userID
          in: path
          required: true
          type: integer
          minimum: 1
          format: int64
        - name: Userdata
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserDataUpdate'
      responses:
        201:
          description: CREATED
          schema:
            $ref: '#/definitions/MessageResponse'
  
  /users/{userID}/accounts:
    post:
      tags: 
        - Privado
      security:
        - OAuth2: [private]    
      summary: Agregar una cuenta al usuario.
      description: Agregar un cuenta al usuario.
      produces: 
        - application/json
      consumes: 
        - application/json
      parameters: 
        - name: userID
          in: path
          required: true
          type: integer
          minimum: 1
          format: int64
        - name: AccountRequest
          in: body
          required: false
          schema:
            $ref: '#/definitions/Accountrequest'
      responses:
        201:
          description: OK
          schema:
            $ref: '#/definitions/AccountsResponse'
    get:
      tags: 
        - Privado
      security:
        - OAuth2: [private]    
      summary: Consultar los datos las cuentas de un usuario
      description: Consultar los datos las cuentas de un usuario
      produces: 
        - application/json
      consumes: 
        - application/json
      parameters: 
        - name: userID
          in: path
          required: true
          type: integer
          format: int64
          minimum: 1
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AccountsGetResponse'     
  
 

definitions:

  PaymentsRequest:
    type: object
    properties:
      ammount:
        type: integer
        format: int64
      debtorAccount:
        type: object
        $ref: '#/definitions/AccountsResponse'
      transactionFeeIndicator:
        type: boolean
      message:
        type: string
      remittanceInformationUnstructured:
        type: string
  
  AccountsGetResponse:
    type: object
    properties:
      accounts:
        type: array
        items:
          $ref: '#/definitions/AccountsResponse'
  
  Accountrequest:
    type: object
    properties:
      currency:
        type: string
        description: Default EUR
      accountAgent:
        type: string
        
  AccountsResponse:
    type: object
    properties:
      accountAgent: 
        type: string
      iban:
        type: string
      currency:
        type: string
  
  MessageResponse:
    type: object
    properties:
      timestamp:
        type: string
      httpStatus:
        type: integer
      reasonPhrase:
        type: string
      message:
        type: string
      
  
  UserData:
    type: object
    properties:
      name:
        type: string
        minLength: 3
      surname:
        type: string
        minLength: 3
      phone:
        type: string
        minLength: 9
        maxLength: 15
      email:
        type: string
        pattern: "^[a-zA-Z0-9-@.]+$"
        minLength: 6
        maxLength: 30
      address:
        $ref: '#/definitions/Address'
      password:
        description: el password debe estar codificado haciendo uso de un sha256.
        type: string
        pattern: "[A-Fa-f0-9]{64}"
        maxLength: 64
        minLength: 64
  
  UserDataUpdate:
    type: object
    properties:
      name:
        type: string
        minLength: 3
      surname:
        type: string
        minLength: 3
      phone:
        type: string
        minLength: 9
        maxLength: 15
      email:
        type: string
        pattern: "^[a-zA-Z0-9-@.]+$"
        minLength: 6
        maxLength: 30
      address:
        $ref: '#/definitions/Address'
         
    
  
  LoginRequest:
    type: object
    properties:
      userName:
        description: email del usuario.
        type: string
        pattern: "^[a-zA-Z0-9-@.]+$"
        minLength: 6
        maxLength: 30
      password:
        description: el password debe estar codificado haciendo uso de un sha256.
        type: string
        pattern: "[A-Fa-f0-9]{64}"
        maxLength: 64
        minLength: 64
  
  LoginResponse:
    type: object
    properties:
      userID:
        type: integer
        minimum: 1
        maximum: 10000
      name:
        type: string
        minLength: 3
      surname:
        type: string
        minLength: 3
      phone:
        type: string
        minLength: 3
      email:
        type: string
        pattern: "^[a-zA-Z0-9-@.]+$"
        minLength: 6
        maxLength: 30
      address:
        $ref: '#/definitions/Address'
      bearer:
        type: string
  Address:
    type: object
    properties:
      street:
        type: string
        minLength: 3
      country:
        type: string
        minLength: 3
      number:
        type: string
        minLength: 1
      floor:
        type: string
        minLength: 1
      postalCode:
        type: string
        minLength: 4
  
  Product:
    type: object
    properties:
      productID:
        type: integer
        minimum: 1
        maximum: 10000
      productName:
        type: string
    
  ErrorResponse:
    type: object
    description: Tipo de error ocurrido.
    properties:
      mensaje:
        type: string
        maxLength: 250
        pattern: "[^A-Za-z0-9]"
      tipo:
        type: string
        maxLength: 250
        pattern: "[^A-Za-z0-9]"


# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /pedrodlf/LiberBank-ApiGateway/1.0
schemes:
 - https